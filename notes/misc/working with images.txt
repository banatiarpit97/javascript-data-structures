<input type="file" accept="image/*" />

document.querySelector('input').addEventListener('change', imageSelected);

function imageSelected(e){
    if (e.target.files && e.target.files[0]) {
        console.log(e.target.files[0].size);

        var reader = new FileReader();
        reader.onload = function (e) {
            console.log(e.target.result);   //this is the image
        };
        reader.readAsDataURL(e.target.files[0]);
    }
}

///////////////////////////////////////////////////
Get info about any image from js:
    const img = new Image();
    img.onload = function(){
        console.log(this.height, this.width)
    }
    img.src = IMAGE_URL;
    //IMAGE_URL can be base64, localPath, remote path of image

//////////////////////////////////////////////////////
Download remote image to local:

    fetch(url)
        .then(res => res.blob())
        .then(blob => {
            const a = document.createElement("a");
            document.body.appendChild(a);
            a.style = "display: none";
            const url = window.URL.createObjectURL(blob);
            a.href = url;
            a.download = "name.jpeg";
            a.click();
            window.URL.revokeObjectURL(url);
        });

///////////////////////////
We must state image dimensions in the image tag itself.
Browser will calculate the space needed for the image before it loads the image, hence reducing CLS(
commullative layout shift)