Use a class based component when:
    state is needed
    need to use lifecycle events
    manage function/events properly

class based component:
    class App extends React.component {
        constructor(props){
            super(props);               //necessary to do this
            this.state = {name: 'arpit'};
        }
        render(){                       
            //wil give an error if render method is not present in class
            return <div>{this.state.name}</div>;
        }
    }

function based component(Pure component):
    const App = (props) => {
        return <div>{props.name}</div>;
    }

third way:(not used much)
React.createClass({
    render() {
        return (
            <div>
                <h1>hey</h1>
            </div>
        )
    }
})

//////////////////////////////////////////////////////////////////
providing default value for props:
    const App = (props) => {
        return <div>{props.name}</div>;
    }
    App.defaultProps = {
        name: 'Arpit'
    }

if we don't provide the prop to this component, then default value will be used.
//////////////////////////////////////////////////////////////////////