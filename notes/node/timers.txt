There are no timers in js
For frontend, browser implements these timers and node it is written in c++ libuv

setImmediate()
    setImmediate(() => {
        //run something
    })
Any function passed as the setImmediate() argument is a callback thatâ€™s executed in 
the next iteration of the event loop.

this is similat to setTimeout with 0 delay but in most cases setImmediate will run before setTimeout
//////////////////////////////////////////////////////////////

setTimeout()
When writing JavaScript code, you might want to delay the execution of a function. 
This is the job of setTimeout.

You can specify a callback function to execute later, and a value expressing how much 
later you want it to run, in milliseconds:
    setTimeout(() => {
        // runs after 2 seconds
    }, 2000)

setTimeout() returns the timer id. This is generally not used, but you can store this id, 
and clear it if you want to delete this scheduled function execution
    clearTimeout(id)

Zero delay:
If you specify the timeout delay to 0, the callback function will be executed as soon as 
possible, but after the current function execution:
This is especially useful to avoid blocking the CPU on intensive tasks and let other 
functions be executed while performing a heavy calculation, by queuing functions in 
the scheduler.
    setTimeout(() => {
        console.log('after ')
    }, 0)
////////////////////////////////////////////////////////////////
setInterval()
it will run it forever, at the specific time interval you specify (in milliseconds)
    setInterval(() => {
        // runs every 2 seconds
    }, 2000)

setInterval starts a function every n milliseconds, without any consideration about when a 
function finished its execution.
So current execution might overlap previous execution of setInterval, instead use recursive
setTimeout
    const myFunction = () => {
        ...
        setTimeout(myFunction, 1000);
    }
    setTimeout(
        myFunction()
    }, 1000)
///////////////////////////////////////////////////////////////////