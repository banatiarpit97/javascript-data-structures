var zlib = require('zlib');

// Compress the contents of one .log file into a .gz.b64 file within the same directory
function compress(){
  // Read the source file
  fs.readFile('sourceFile.txt', 'utf8', function(err,inputString){
    if(!err && inputString){
      // Compress the data using gzip
      zlib.gzip(inputString,function(err,buffer){
        if(!err && buffer){
          // Send the data to the destination file
          fs.open('destFile.gz.b64', 'wx', function(err, fileDescriptor){
            if(!err && fileDescriptor){
              // Write to the destination file
              fs.writeFile(fileDescriptor, buffer.toString('base64'),function(err){
                if(!err){
                  // Close the destination file
                  fs.close(fileDescriptor,function(err){
                    if(err){
                      console.log(err);
                  });
                } else {
                  console.log(err);
                }
              });
            } else {
              console.log(err);
            }
          });
        } else {
          console.log(err);
        }
      });
    } else {
      console.log(err);
    }
  });
};



// Decompress the contents of a .gz file into a string variable
function decompress(){
  fs.readFile('destFile.gz.b64', 'utf8', function(err,str){
    if(!err && str){
      // Inflate the data
      var inputBuffer = Buffer.from(str, 'base64');
      zlib.unzip(inputBuffer,function(err,outputBuffer){
        if(!err && outputBuffer){
          var str = outputBuffer.toString();
          console.log(str);
        } else {
          console.log(err);
        }
      });
    } else {
      console.log(err);
    }
  });
};