props are variables passed to the child component from the parent component
They are one-way form of communication

These are used just like html attributes:
    <Car color="red" />

instead of passing a static value, we can pass a state variable of the parent component,
and whenever the state variable changes, child component is re rendered with it updated
value.

///////////////////////////////////////////////////////////////////
To define props inside the child component, we use the export keyword.exported variables inside
a component are the props that can be passed from its parent.

    define it like:
    <script>
        export let color;
    </script>

    and use it like
        <Car color="red" />

/////////////////////////////////////////////////////////////////////////
we can provide default values for props by initializing it in child component:
    <script>
        export let color="red";
    </script>

/////////////////////////////////////////////////////////////////////////
if prop name and variable name is same, we can use shorthand:
    <Car {color} /> instead of <Car color={color} />
////////////////////////////////////////////////////////////////////////
Conversely, if you need to reference all the props that were passed into a component, 
including ones that weren't declared with export, you can do so by accessing $$props directly. 
It's not generally recommended, as it's difficult for Svelte to optimise, but it's useful 
in rare cases.