Svelte provides a variety of built-in elements.

<svelte:self>:
    allows a component to contain itself recursively.
    if we want to use a component in itself, we can't do so since a component can not
    import itself
        <svelte:self {...props}/>


<svelte:component>
    A component can change its category altogether with <svelte:component>.
    Instead of a sequence of if blocks, we can have a single dynamic component:
        <svelte:component this={selected.component}/>

    The this value can be any component constructor, or a falsy value — if it's falsy, 
    no component is rendered.


<svelte:window>
    Just as you can add event listeners to any DOM element, you can add event listeners to the 
    window object with <svelte:window>.
        <svelte:window on:keydown={handleKeydown}/>

    We can also bind to certain properties of window, such as innerWidth, innerHeight, 
    outerWidth, outerHeight, scrollX, scrollY, online — an alias for window.navigator.onLine
    all except scrollX and scrollY are readonly
        <svelte:window bind:scrollY={y}/>


<svelte:body>
    allows you to listen for events that fire on document.body. This is useful with the 
    mouseenter and mouseleave events, which don't fire on window.
        <svelte:body on:mouseenter={handleMouseenter} />



<svelte:head> 
    allows you to insert elements inside the <head> of your document:
    In server-side rendering (SSR) mode, contents of <svelte:head> are returned 
    separately from the rest of your HTML.
        <svelte:head>
            <link rel="stylesheet" href="tutorial/dark-theme.css">
        </svelte:head>


<svelte:options> 
    allows you to specify compiler options.
    The options that can be set here are:
        immutable={true} — you never use mutable data, so the compiler can do simple 
                           referential equality checks to determine if values have changed
        immutable={false} — the default. Svelte will be more conservative about whether 
                            or not mutable objects have changed
        accessors={true} — adds getters and setters for the component's props
        accessors={false} — the default
        namespace="..." — the namespace where this component will be used, most commonly "svg"
        tag="..." — the name to use when compiling this component as a custom element

            <svelte:options immutable={true}/> or <svelte:options immutable/>
