the css styles we write inside the <style> tag is scoped to that perticular component
only and will not affect any other component
Svelte adds a hash 'svelte-something' to classname and element which helps the scoping

Unused css is automatically stipped off from result.

If we import a component, styles of parent component won't affect the child component

//////////////////////////////////////////////////////////
using scss in svelte:
    npm i -D svelte-preprocess

    in webpack.config.js:
        const autoPreprocess = require('svelte-preprocess');
        const { scss }  = require('svelte-preprocess');
        in 'options' object of svelte-loader, add - preprocess: autoPreprocess({scss: true})

    add lang attribute in style tag of component:
        <style lang="scss">
            h1 {
                color: purple;
            }
        </style>

    for vscode to detect scss:
        in svelte.config.js:
            const sveltePreprocess = require('svelte-preprocess');
            const { scss }  = require('svelte-preprocess');
            
            module.exports = {
                preprocess: sveltePreprocess({scss: true}),
            };

/////////////////////////////////////////////////////////////////

defining global styles in component:
 <style>
    :global(p){
        color: red;
    }
 </style>

 Though we should not do this, instead put styles in global.css