var a = [1,2,3,4];
var a = new Array(1,2,3,4)  //same result as above, but this time 'a' is object
var a = new Array(3)        //empty array of size 3

arrays in js can store different values, string, int, object...
var a = ['red', 1, {prop:val}, [1,2,4]];

We can synamically resize array,
if an array is of size 3 [1,2,3], and we do a[5] = 5, then -> [1,2,3,undefined, undefined, 5];

ARRAY PROPERTIES :

a.length;
a.shift()   //removes first element
a.unshift(n)    //add element at start of array
a.pop()     //removes last element
a.push(n)   //add element at end of array
a.splice(start_ind, number_of_elem_to_be_removed, elems to be added)
a.indeOf(elem)
a.join("string to be in between array elems")
a.concat(list of arrays separted by commas)
a.include(element)  return true or false

Spread operator :
a = [1,2,3]
..a gives 1,2,3 separately and not as array

spread operator can be used to create copy of an array(not reference)	:
	var a = [1,2,3];
	var b = [...a];
	now be is an independent array and modifications on b will not affect a(if we did b = a, then b would be reference of a)
