introduced in es6

if we use defualt exprt then anonymous function can also be exported otherwise not
////////////////////////////////////////////////////////////////////////////
<script type="module" src="index.js">
    this module imprt behaves like defer script load
    type="module" is loaded in strict mode
////////////////////////////////////////////////////////////////////////////
While importing, it is necesarry to give absolute or relative path
import {foo} from '/index.js'     or
import {foo} from './index.js'     
import {foo} from 'index.js'     //wrong
////////////////////////////////////////////////////////////////////////////
renaming an import using 'as'
import {foo as arpit} from '/index.js'
////////////////////////////////////////////////////////////////////////////
importing default export
import boo from './index.js'

importing non-default or named export
import {foo} from './index.js'

both:
import boo, {foo} from './index.js'
////////////////////////////////////////////////////////////////////////////
Modules are fetched usin CORS that is they must have a valid cors header
////////////////////////////////////////////////////////////////////////////
<script type="module" src="index.js">
<script nomodule src="fallback.js">     //for browsers that do not support modules
////////////////////////////////////////////////////////////////////////////
Ways to export:

    1. export default func_name
    2. export function aa () { }    //both 1 and 2 can be used together in a file
    3. module.exports = {
            func1,
            func2
        }

/////////////////////////////////////////////////////////////////////////////
what works:
	export {a:1}
	import {a} from ''

	export default a;
	import a from ''


what does not work:
	export default {a:1}
	import {a} from ''
